{"version":3,"sources":["Eye/LEDMatrix.js","Eye/Eye.js","Face/Face.js","App.js","index.js"],"names":["LEDMatrix","props","width","height","dotsPerRow","dotsPerCol","dotRadius","dotBlurRadius","color","colSpacing","rowSpacing","dots","row","col","x","y","brightness","Math","max","min","push","key","radius","fillRadialGradientStartPoint","fillRadialGradientStartRadius","fillRadialGradientEndPoint","fillRadialGradientEndRadius","fillRadialGradientColorStops","fillPriority","opacity","Eye","getBrightness","flipX","size","cx","cy","angle","atan2","openness","cr","sqrt","dilation","shape","floor","PI","uly","upperLid","slope","curvature","lly","lowerLid","this","updateLids","positivity","intensity","externality","prospection","surprise","React","PureComponent","defaultProps","Face","state","loop","updateEmotions","beatTimeout","setTimeout","random","setState","clearTimeout","from","to","emotion","className","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8e59b2c.chunk.js","sourcesContent":["import React from 'react'\nimport { Stage, Layer, Circle } from 'react-konva'\n\n\nconst LEDMatrix = props => {\n  const {\n    width = 240,\n    height = 240,\n    dotsPerRow = 15,\n    dotsPerCol = 15,\n    dotRadius = 3,\n    dotBlurRadius = 3,\n    color = \"#3498db\",\n  } = props;\n\n  const colSpacing = width / (dotsPerRow + 1);\n  const rowSpacing = height / (dotsPerCol + 1);\n\n  const dots = [];\n\n  for (let row = 0; row < dotsPerCol; row++) {\n    for (let col = 0; col < dotsPerRow; col++) {\n      const x = (col + 1) * colSpacing;\n      const y = (row + 1) * rowSpacing;\n      const brightness = Math.max(0, Math.min(1, props.brightness(x, y)));\n\n      dots.push(\n        <Circle key={`${row},${col}`} x={x} y={y} radius={dotRadius + dotBlurRadius}\n          fillRadialGradientStartPoint={{ x: 0, y: 0 }}\n          fillRadialGradientStartRadius={dotRadius}\n          fillRadialGradientEndPoint={{ x: 0, y: 0 }}\n          fillRadialGradientEndRadius={dotRadius + dotBlurRadius}\n          fillRadialGradientColorStops={[0, color, 1, '#000000']}\n          fillPriority=\"radial-gradient\"\n          opacity={brightness}/>\n      )\n    }\n  }\n\n  return (\n    <Stage width={width} height={height}>\n      <Layer>\n        { dots }\n      </Layer>\n    </Stage>\n  )\n}\n\n\nexport default LEDMatrix\n","import _ from 'lodash'\nimport React from 'react'\nimport LEDMatrix from './LEDMatrix'\n\n\nclass Eye extends React.PureComponent {\n  componentDidMount() {\n    this.updateLids();\n  }\n\n  updateLids() {\n    const {\n      intensity,\n      positivity,\n      prospection,\n      externality,\n      surprise,\n    } = this.props;\n\n    this.upperLid = {\n      x: this.props.size/2,\n      y: 50 - this.props.size/2*surprise,\n      slope: (externality - .5) * (1 - positivity),\n      curvature: 0,\n    };\n\n    this.lowerLid = {\n      x: this.props.size/2,\n      y: this.props.size - this.props.size/2*positivity,\n      slope: 0,\n      curvature: positivity/2,\n    };\n  }\n\n  getBrightness = (x, y) => {\n    if (this.props.flipX) x = this.props.size - x;\n\n    const cx = 2 * x / this.props.size - 1;\n    const cy = 2 * y / this.props.size - 1;\n    const angle = Math.atan2(cy, cx);\n\n    const openness = Math.max(0.001, this.props.openness);\n    const cr = Math.sqrt(cx**2 + (cy/openness)**2);\n    let brightness = 1 - cr**(1 + this.props.dilation*3);\n\n    let blurRadius = 30;\n\n    if (this.props.shape === 'star') {\n      const section = Math.floor(angle / (Math.PI / 5));\n      const sr = (angle - section);\n    }\n\n    //upper lid\n    const uly = this.upperLid.y - this.upperLid.slope * (x - this.upperLid.x) + 2 * this.upperLid.curvature * (x - this.upperLid.x)**2 / this.props.size;\n    brightness *= Math.max(0, Math.min(1, (y - uly)/blurRadius));\n\n    const lly = this.lowerLid.y - this.lowerLid.slope * (x - this.lowerLid.x) + 2 * this.lowerLid.curvature * (x - this.lowerLid.x)**2 / this.props.size;\n    brightness *= Math.max(0, Math.min(1, (lly - y)/blurRadius));\n\n    return brightness;\n  }\n\n  render() {\n    this.updateLids();\n\n    return (\n      <LEDMatrix width={240} height={240} brightness={this.getBrightness} />\n    )\n  }\n}\n\n\nEye.defaultProps = {\n  intensity: 0,\n  positivity: 0,\n  prospection: 0,\n  externality: 0,\n  surprise: 0,\n\n  size: 240,\n  dilation: .2,\n  openness: 1,\n\n  flipX: false,\n};\n\n\nexport default Eye\n","import React from 'react';\nimport { Spring } from 'react-spring/renderprops'\nimport Eye from 'Eye';\nimport './Face.css';\n\n\nclass Face extends React.PureComponent {\n  state = {\n    positivity: 0,\n    intensity: 0,\n    prospection: 0,\n    externality: 0,\n    surprise: 0,\n  }\n\n  componentDidMount() {\n    this.loop();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.beatTimeout);\n  }\n\n  loop = () => {\n    this.updateEmotions();\n\n    this.beatTimeout = setTimeout(this.loop, 1000 + 2000 * Math.random());\n  }\n\n  updateEmotions = () => {\n    this.setState({\n      intensity: Math.random(),\n      positivity: Math.random(),\n      prospection: Math.random(),\n      externality: Math.random(),\n      surprise: Math.random(),\n    });\n  }\n\n  render() {\n    return (\n      <Spring from={{...this.state}} to={{...this.state}}>\n        { emotion => (\n          <div className=\"face\">\n            <Eye {...emotion} />\n            <div className=\"spacer\" />\n            <Eye {...emotion} flipX={true} />\n          </div>\n        )}\n      </Spring>\n    )\n  }\n}\n\n\nexport default Face\n","import React from 'react'\nimport Face from './Face'\n\n\nconst App = props => (\n  <div className=\"app\">\n    <Face />\n  </div>\n)\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}